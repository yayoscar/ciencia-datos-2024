¿Qué hace el comando git init y en qué situaciones se utiliza? Se emplea para configurar un repositorio de Git en un directorio. Crea un repositorio vacío en el que se pueden empezar a seguir los cambios de los archivos. Se utiliza cuando se desea transformar un proyecto o carpeta ya existente en un repositorio Git, o al iniciar un nuevo proyecto desde cero.


¿Cuál es la diferencia entre git add y git commit en el flujo de trabajo de Git? git add prepara los archivos.
git commit guarda los cambios en el historial.


¿Que significa que un archivo este en estado "stage" en Git y como se coloca en este estado? Un archivo en estado "stage" en Git indica que está listo para ser incluido en el próximo commit. Para colocar un archivo en este estado, se utiliza el comando git add.


¿Cuál es la diferencia entre git reset --soft, git reset --mixed y git reset --hard? 
soft: Revierte el commit, pero mantiene los cambios en staging.  
mixed: Revierte el commit y elimina los cambios del staging.  
hard: Revierte el commit y descarta los cambios.


¿Qué es una fusión (merge) en Git y cuáles son los posibles conflictos que pueden ocurrir durante el proceso? Una fusión en Git es el proceso de unir dos ramas distintas en una sola. Esto se realiza para integrar los cambios realizados en ambas ramas.

Conflictos que pueden ocurrir:

Conflictos de contenido: Se producen cuando dos ramas alteran la misma línea de un archivo. Git no puede determinar qué versión conservar, por lo que es necesaria una intervención manual.  
Conflictos de eliminación: Ocurren cuando un archivo se elimina en una rama y se modifica en otra, y Git no sabe cómo resolver la situación.

¿Para qué se usa el comando git checkout y cuál es su diferencia con git switch? El comando git checkout se utiliza para cambiar de rama o restaurar archivos a su estado previo.

Diferencias con git switch:

- git checkout: Permite cambiar de rama o restaurar archivos. Es más flexible, pero puede resultar confuso.
- git switch: Es una versión más moderna y específica de git checkout, diseñada exclusivamente para cambiar de rama, lo que hace que el proceso sea más claro y fácil de comprender.


¿Cómo funciona git pull y en qué se diferencia de git fetch?
Los comandos git pull y git fetch están relacionados con la sincronización de tu repositorio local con uno remoto, pero funcionan de forma distinta.

Diferencias principales:

- git fetch solo descarga los cambios desde el repositorio remoto, sin realizar ninguna modificación en tu rama local.
- git pull descarga y fusiona automáticamente esos cambios con tu rama local, actualizándola de inmediato.

¿Qué ocurre cuando se ejecuta git push y qué problemas pueden surgir si hay cambios en el repositorio remoto? Al ejecutar `git push`, envías tus cambios locales al repositorio remoto. Si existen cambios en el remoto que no tienes, el push podría ser rechazado. En ese caso, debes realizar un `git pull` primero para obtener esos cambios y luego volver a hacer el push.

¿Cuál es la diferencia entre git clone y git init? La diferencia entre `git clone` y `git init` es la siguiente:

- `git clone`: Se utiliza para copiar un repositorio remoto completo (incluyendo todo su historial y ramas) a tu máquina local.
  
- `git init`: Se usa para inicializar un nuevo repositorio vacío en tu directorio local, sin contenido ni historial, para comenzar a trabajar en un proyecto.

Flujo de trabajo en Git

