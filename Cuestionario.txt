
¿Qué hace el comando git init y en qué situaciones se utiliza? se utiliza para inicializar un repositorio de Git en un directorio.
 Crea un nuevo repositorio vacío donde se pueden empezar a rastrear los cambios de archivos. Se usa cuando se quiere convertir 
un proyecto o carpeta existente en un repositorio Git o al comenzar un nuevo proyecto desde cero.



¿Cuál es la diferencia entre git add y git commit en el flujo de trabajo de Git? git add prepara los archivos.
git commit guarda los cambios en el historial.


¿Que significa que un archivo este en estado "stage" en Git y como se coloca en este estado?Un archivo en estado "stage" en Git significa que está preparado para ser 
incluido en el próximo commit. Para poner un archivo en este estado, usas el comando git add.


¿Cuál es la diferencia entre git reset --soft, git reset --mixed y git reset --hard?  --soft: Deshace commit, mantiene en staging.
--mixed: Deshace commit, quita de staging.
--hard: Deshace commit, elimina cambios.


¿Qué es una fusión (merge) en Git y cuáles son los posibles conflictos que pueden ocurrir durante el proceso? Una fusión (merge) en Git es el proceso de combinar dos ramas 
diferentes en una sola. Esto se hace para integrar los cambios realizados en ambas ramas.

Conflictos que pueden ocurrir:

Conflictos de contenido: Ocurren cuando dos ramas modifican la misma línea de un archivo. Git no puede decidir qué versión conservar, por lo que se necesita intervención manual.
Conflictos de eliminación: Si un archivo se elimina en una rama y se modifica en otra, Git no sabe qué hacer con él.


¿Para qué se usa el comando git checkout y cuál es su diferencia con git switch? El comando git checkout se usa para cambiar de rama o restaurar archivos a su estado anterior.

Diferencias con git switch:

git checkout: Cambia de rama o restaura archivos. Es más versátil, pero puede ser confuso.
git switch: Es una versión más específica y moderna de git checkout, diseñada solo para cambiar de rama, haciendo el proceso más claro y fácil de entender.


¿Cómo funciona git pull y en qué se diferencia de git fetch? El comando git pull y git fetch están relacionados con la sincronización de tu repositorio local con un
 repositorio remoto, pero funcionan de manera diferente.

Diferencias clave:

git fetch solo descarga los cambios del repositorio remoto, pero no hace ninguna modificación en tu rama local.
git pull descarga y fusiona automáticamente esos cambios con tu rama local, actualizándola de inmediato.


¿Qué ocurre cuando se ejecuta git push y qué problemas pueden surgir si hay cambios en el repositorio remoto? Cuando ejecutas git push, envías tus cambios locales al 
repositorio remoto. Si hay cambios en el remoto que no tienes, el push puede ser rechazado. En este caso, debes hacer un git pull primero para traer esos cambios y luego 
hacer el push nuevamente.


¿Cuál es la diferencia entre git clone y git init?La diferencia entre git clone y git init es:

git clone: Se usa para copiar un repositorio remoto completo (incluyendo todo su historial y ramas) a tu máquina local.

git init: Se usa para inicializar un nuevo repositorio vacío en tu directorio local, sin contenido ni historial, para empezar a trabajar en un proyecto.

Flujo de trabajo en Git

