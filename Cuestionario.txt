¿Qué hace el comando git init y en qué situaciones se utiliza?
Inicializa un nuevo repositorio Git en un directorio. Se usa para comenzar a gestionar versiones de un proyecto desde cero.

¿Cuál es la diferencia entre git add y git commit en el flujo de trabajo de Git?
git add agrega cambios al área de preparación (staging), mientras que git commit guarda esos cambios en el historial del repositorio.

¿Qué significa que un archivo esté en estado "stage" en Git y cómo se coloca en este estado?
Significa que está listo para ser confirmado (commit). Se coloca en este estado con git add.

¿Cuál es la diferencia entre git reset --soft, git reset --mixed y git reset --hard?
--soft: Deshace el commit pero mantiene los cambios en staging.
--mixed: Deshace el commit y los saca de staging, pero los mantiene en el directorio de trabajo.
--hard: Borra los cambios por completo.

¿Qué es una fusión (merge) en Git y cuáles son los posibles conflictos que pueden ocurrir durante el proceso?
Es la combinación de ramas. Pueden ocurrir conflictos si hay cambios en las mismas líneas de código en diferentes ramas.

¿Para qué se usa el comando git checkout y cuál es su diferencia con git switch?
git checkout permite cambiar de rama o restaurar archivos, mientras que git switch es más específico para cambiar de rama y es más moderno.

¿Cómo funciona git pull y en qué se diferencia de git fetch?
git pull descarga cambios remotos y los fusiona automáticamente. git fetch solo descarga los cambios sin fusionarlos.

¿Qué ocurre cuando se ejecuta git push y qué problemas pueden surgir si hay cambios en el repositorio remoto?
git push envía commits locales al repositorio remoto. Puede fallar si hay cambios en el remoto que no has obtenido (git pull puede ser necesario).

¿Cuál es la diferencia entre git clone y git init?
git clone copia un repositorio remoto a local, y git init crea un repositorio vacío desde cero
