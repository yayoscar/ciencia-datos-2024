1. ¿Qué hace el comando git init y en qué situaciones se utiliza?
El comando git init inicializa un nuevo repositorio de Git en un directorio. Crea una estructura de datos necesaria para rastrear cambios de archivos.
Se usa cuando:
Se quiere convertir un proyecto o carpeta existente en un repositorio Git.
Se comienza un nuevo proyecto desde cero.

2. ¿Cuál es la diferencia entre git add y git commit en el flujo de trabajo de Git?
git add: Agrega cambios al área de preparación (staging), preparando archivos para ser confirmados en el próximo commit.
git commit: Guarda los cambios en el historial del repositorio, creando un nuevo punto en el tiempo con un mensaje descriptivo.

3. ¿Qué significa que un archivo esté en estado "stage" en Git y cómo se coloca en este estado?
Un archivo en estado "stage" significa que está preparado para ser incluido en el próximo commit.

4. ¿Cuál es la diferencia entre git reset --soft, git reset --mixed y git reset --hard?
--soft: Deshace el commit, pero mantiene los cambios en el área de staging.
--mixed: Deshace el commit y elimina los cambios del área de staging, pero los deja en el directorio de trabajo.
--hard: Deshace el commit y elimina completamente los cambios del directorio de trabajo.

5. ¿Qué es una fusión (merge) en Git y cuáles son los posibles conflictos que pueden ocurrir durante el proceso?
Una fusión (merge) en Git es el proceso de combinar dos ramas diferentes en una sola, integrando los cambios de ambas.Posibles conflictos:
Conflictos de contenido: Ocurren cuando dos ramas han modificado la misma línea de un archivo y Git no puede decidir qué versión mantener.
Conflictos de eliminación: Si un archivo ha sido eliminado en una rama pero modificado en otra, Git no sabe si conservarlo o eliminarlo.

6. ¿Para qué se usa el comando git checkout y cuál es su diferencia con git switch?
git checkout: Se usa para cambiar de rama o restaurar archivos a un estado anterior.
git switch: Es una versión más moderna y específica para cambiar de rama, sin afectar archivos individuales.

7. ¿Cómo funciona git pull y en qué se diferencia de git fetch?
git fetch: Descarga los cambios del repositorio remoto, pero no los fusiona automáticamente en la rama actual.
git pull: Descarga y fusiona los cambios automáticamente en la rama actual.

8. ¿Qué ocurre cuando se ejecuta git push y qué problemas pueden surgir si hay cambios en el repositorio remoto?
Cuando ejecutas git push, envías tus cambios locales al repositorio remoto.Problemas posibles:
Si el repositorio remoto tiene cambios que no tienes en tu local, el push será rechazado.
Para solucionarlo, primero debes hacer un git pull para actualizar tu rama antes de intentar el git push nuevamente.

9. ¿Cuál es la diferencia entre git clone y git init?
git clone: Copia un repositorio remoto en tu máquina local, incluyendo su historial y ramas.
git init: Crea un repositorio vacío en tu directorio local para comenzar a trabajar en un nuevo proyecto.
